## General
shell zsh -c 'tmux new-session -e "COLORSCHEME=${COLORSCHEME:-lavi}"'

env COLORSCHEME=lavi

## Font
font_family      IosevkaTerm Nerd Font Mono
italic_font      IosevkaTerm Nerd Font Mono
bold_font        IosevkaTerm Nerd Font Mono
bold_italic_font Iosevka Term Slab

font_size 14.0

modify_font underline_thickness 0
modify_font underline_position 1.5

## Scrollback
scrollback_lines              10000
scrollback_pager_history_size 100000

scrollback_pager bat
scrollback_in_new_tab no

## Mouse
# Hide mouse cursor after the specified number of seconds of the mouse not
# being used. Set to zero to disable mouse cursor hiding. Set to a negative
# value to hide the mouse cursor immediately when typing text.
mouse_hide_wait -1

# The modifier keys to press when clicking with the mouse on URLs to open the URL
# Test: http://github.com/
open_url_modifiers ctrl
# Additional characters to be disallowed from URLs, when detecting URLs under the mouse cursor.
url_excluded_characters ⌐ᐧ

## Performance
# Delay (in milliseconds) between screen updates. Decreasing it, increases fps
# at the cost of more CPU usage. The default value yields ~100fps which is more
# than sufficient for most uses.
repaint_delay    8

# Delay before input from the program running in the terminal is processed (in
# milliseconds). Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that
# redraw the entire screen on each loop, because kitty is so fast that partial
# screen updates will be drawn.
input_delay 1

## Bell
# Visual bell duration in seconds. Set to zero to disable visual bell.
visual_bell_duration 0.17
visual_bell_color #ccb0ff
enable_audio_bell no

# Choose whether to use the system implementation of wcwidth() (used to
# control how many cells a character is rendered in).  If you use the system
# implementation, then kitty and any programs running in it will agree. The
# problem is that system implementations often are based on outdated unicode
# standards and get the width of many characters, such as emoji, wrong. So if
# you are using kitty with programs that have their own up-to-date wcwidth()
# implementation, set this option to no.
use_system_wcwidth no

# The value of the TERM environment variable to set
term xterm-kitty

## Layout

# The width (in pts) of window borders. Will be rounded to the nearest number of pixels based on screen resolution.
# Note that borders are displayed only when more than one window is visible. They are meant to separate multiple windows.
window_border_width 0

# The window margin (in pts) (blank area outside the border)
window_margin_width 0

# The window padding (in pts) (blank area between the text and the window border)
window_padding_width 0

placement_strategy center

## Colors - Lavi
foreground #FFF1E0
background #201C33
# background #252137

selection_foreground #000000
selection_background #FFFFFF

cursor #D8DEE9

active_border_color #81A1C1
inactive_border_color #2E3440

active_tab_foreground #2E3440
active_tab_background #81A1C1
inactive_tab_foreground #81A1C1
inactive_tab_background #2E3440

# black
color0   #2F2A38
color8   #8977A8

# red
color1   #FF87A5
color9   #F2637E

# green
color2   #6EEB84
color10  #AFFF61

# yellow
color3   #FFD080
color11  #FFDF61

# blue
color4   #80BDFF
color12  #7583FF

# magenta
color5   #B891FF
color13  #B98AFF

# cyan
color6   #3FC4C4
color14  #2BEDC0

# white
color7   #EEE6FF
color15  #FFFFFF

## Mappping
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.

# Kitty-specific
map ctrl+shift+r        load_config_file
map ctrl+equal          change_font_size all +0.5
map ctrl+minus          change_font_size all -0.5
map ctrl+0              restore_font_size

# Clipboard
map alt+v               paste_from_clipboard
map alt+c               copy_to_clipboard
map shift+insert        paste_from_selection

# Extra Keys
# Neovim special keys
map ctrl+shift+q        send_text all \uFF01
map ctrl+shift+n        send_text all \uFF02
map ctrl+alt+shift+n    send_text all \uFF02
map ctrl+alt+q          send_text all \uFF03
map ctrl+alt+shift+q    send_text all \uFF04
map ctrl+backslash      send_text all \u00F0
map ctrl+shift+backslash send_text all \u00F1
map alt+shift+backslash send_text all \u00F2
map ctrl+grave          send_text all \u00F3
map ctrl+shift+w        send_text all \u00F4
map ctrl+shift+f        send_text all \u00F5
map ctrl+shift+t        send_text all \u00F6
map ctrl+shift+a        send_text all \u00F7
map ctrl+apostrophe     send_text all \u00F8
map ctrl+shift+p        send_text all \u00F9
map ctrl+shift+period   send_text all \u00FA
map ctrl+period         send_text all \u00FB
map ctrl+shift+o        send_text all \u00FC
map ctrl+shift+i        send_text all \u00FD
map alt+c               send_text all \u00FE
map ctrl+slash          send_text all \u00D4
map ctrl+alt+slash      send_text all \u00D5
map ctrl+shift+slash    send_text all \u00D6
map alt+shift+slash     send_text all \u00D7
map ctrl+alt+shift+slash send_text all \u00D8
map alt+space           send_text all \u00D9

# Other special keys
map ctrl+enter          send_text all \x1b[24~
map alt+enter           send_text all \x1b[25~
map alt+shift+tab       send_text all \x1b[23;5~
map ctrl+comma          send_text all \x1b[21;5~
map ctrl+alt+shift+j    send_text all \x1b[20;5~
map ctrl+alt+shift+k    send_text all \x1b[19;5~
map ctrl+alt+shift+u    send_text all \x1b[24;2~

# vim:fileencoding=utf-8:ft=conf
